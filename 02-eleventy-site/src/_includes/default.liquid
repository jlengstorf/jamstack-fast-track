<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{{ title }} Â· Jamstack Fast Track</title>
    <link rel="stylesheet" href="/css/main.css" />
  </head>
  <body>
    <header>
      <a href="/">Jamstack Fast Track</a>
      <nav>
        <a href="/" {% if page.url == "/" %}class="active"{% endif %}>Home</a>
        <a href="/about/" {% if page.url == "/about/" %}class="active"{% endif %}>About</a>
        <a href="/contact/" {% if page.url == "/contact/" %}class="active"{% endif %}>Contact</a>
      </nav>
    </header>

    <main>
      {{ content }}

      <div class="comments">
        <h2>Comments</h2>
        <ul class="comment-list"></ul>

        <h3>Add a Comment</h3>
        <form action="/.netlify/functions/add-comment" method="POST">
          <label for="githubUsername">GitHub Username</label>
          <input id="githubUsername" name="githubUsername" type="text" />

          <label for="page-comment">Comment</label>
          <textarea id="page-comment" name="comment"></textarea>

          <input type="hidden" name="page" value="{{ page.url }}" />

          <button type="submit">Post Comment</button>
        </form>
      </div>
    </main>

    <footer>
      <p>Built by <a href="#yourlinkhere">Your Name Here</a></p>
    </footer>

    <template id="comment">
      <li>
        <p class="comment-text"></p>
        <p class="comment-author"></p>
      </li>
    </template>

    <script>
      async function displayComments() {
        if (!'content' in document.createElement('template')) {
          console.error('You browser does not support the template element.')
        }

        const commentContainer = document.querySelector('.comment-list');
        const commentTemplate = document.querySelector('#comment');

        const response = await fetch('/.netlify/functions/load-comments', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ page: '{{ page.url }}' })
        })
          .then(res => res.json())
          .catch(err => console.error(err));
        
        response.commentsByPage.data.forEach(({ githubUsername, comment }) => {
          const container = commentTemplate.content.cloneNode(true);

          container.querySelector('.comment-text').innerText = comment;
          container.querySelector('.comment-author').innerText = `Posted by @${githubUsername}`;

          commentContainer.appendChild(container);
        })
      }

      displayComments()
    </script>
  </body>
</html>
